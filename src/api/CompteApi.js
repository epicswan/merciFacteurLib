/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse20018} from '../model/InlineResponse20018';
import {InlineResponse20019} from '../model/InlineResponse20019';
import {InlineResponse2002} from '../model/InlineResponse2002';
import {InlineResponse400} from '../model/InlineResponse400';

/**
* Compte service.
* @module api/CompteApi
* @version 1.2.7
*/
export class CompteApi {

    /**
    * Constructs a new CompteApi. 
    * @alias module:api/CompteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getQuotaCompte operation.
     * @callback moduleapi/CompteApi~getQuotaCompteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20018{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir les infos des quotas liés au compte Merci facteur Pro.
     * Obtenir le montant restant sur le compte, la date d&#x27;expiration du plan, ainsi que le nombre de pages envoyées dans le mois.
     * @param {String} wwServiceId Votre service Id
     * @param {String} wwAccessToken Un access token valide
     * @param {module:api/CompteApi~getQuotaCompteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getQuotaCompte(wwServiceId, wwAccessToken, callback) {
      
      let postBody = null;
      // verify the required parameter 'wwServiceId' is set
      if (wwServiceId === undefined || wwServiceId === null) {
        throw new Error("Missing the required parameter 'wwServiceId' when calling getQuotaCompte");
      }
      // verify the required parameter 'wwAccessToken' is set
      if (wwAccessToken === undefined || wwAccessToken === null) {
        throw new Error("Missing the required parameter 'wwAccessToken' when calling getQuotaCompte");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'ww-service-id': wwServiceId,'ww-access-token': wwAccessToken
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20018;

      return this.apiClient.callApi(
        '/getQuotaCompte', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getWebhookEndpoint operation.
     * @callback moduleapi/CompteApi~getWebhookEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20019{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir l&#x27;URL de webhook parametrée sur le compte.
     * Obtenir l&#x27;URL de webhook parametrée sur le compte (URL sur laquelle seront envoyé les évènements liés à vos courriers). Si aucune URL webhook n&#x27;est renseigné, vous recevrez une chaine de caractères vide. 
     * @param {String} wwServiceId Votre service Id
     * @param {String} wwAccessToken Un access token valide
     * @param {module:api/CompteApi~getWebhookEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getWebhookEndpoint(wwServiceId, wwAccessToken, callback) {
      
      let postBody = null;
      // verify the required parameter 'wwServiceId' is set
      if (wwServiceId === undefined || wwServiceId === null) {
        throw new Error("Missing the required parameter 'wwServiceId' when calling getWebhookEndpoint");
      }
      // verify the required parameter 'wwAccessToken' is set
      if (wwAccessToken === undefined || wwAccessToken === null) {
        throw new Error("Missing the required parameter 'wwAccessToken' when calling getWebhookEndpoint");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'ww-service-id': wwServiceId,'ww-access-token': wwAccessToken
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20019;

      return this.apiClient.callApi(
        '/getWebhookEndpoint', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the setWebhookEndpoint operation.
     * @callback moduleapi/CompteApi~setWebhookEndpointCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2002{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Définir l&#x27;URL du endpoint sur laquelle les évènements liés à vos courriers seront envoyés via webhooks
     * Définir l&#x27;URL du endpoint sur laquelle les évènements liés à vos courriers seront envoyés via webhooks. Pour supprimer l&#x27;URL et ne plus recevoir les évènement, envoyez une chaine vide dans \&quot;url\&quot;.
     * @param {String} url 
     * @param {String} wwServiceId Votre service Id
     * @param {String} wwAccessToken Un access token valide
     * @param {module:api/CompteApi~setWebhookEndpointCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    setWebhookEndpoint(url, wwServiceId, wwAccessToken, callback) {
      
      let postBody = null;
      // verify the required parameter 'url' is set
      if (url === undefined || url === null) {
        throw new Error("Missing the required parameter 'url' when calling setWebhookEndpoint");
      }
      // verify the required parameter 'wwServiceId' is set
      if (wwServiceId === undefined || wwServiceId === null) {
        throw new Error("Missing the required parameter 'wwServiceId' when calling setWebhookEndpoint");
      }
      // verify the required parameter 'wwAccessToken' is set
      if (wwAccessToken === undefined || wwAccessToken === null) {
        throw new Error("Missing the required parameter 'wwAccessToken' when calling setWebhookEndpoint");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'ww-service-id': wwServiceId,'ww-access-token': wwAccessToken
      };
      let formParams = {
        'url': url
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2002;

      return this.apiClient.callApi(
        '/setWebhookEndpoint', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}