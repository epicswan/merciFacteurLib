/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse20020} from '../model/InlineResponse20020';
import {InlineResponse400} from '../model/InlineResponse400';

/**
* Errors service.
* @module api/ErrorsApi
* @version 1.2.7
*/
export class ErrorsApi {

    /**
    * Constructs a new ErrorsApi. 
    * @alias module:api/ErrorsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the listErrors operation.
     * @callback moduleapi/ErrorsApi~listErrorsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20020{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtenir la liste des erreurs possiblement retournées par l&#x27;API.
     * Vous pouvez personnaliser tous les messages d&#x27;erreur en fonction des codes d&#x27;erreur retournés par l&#x27;API. Chaque erreur est identifiée par un code d&#x27;erreur qui ne changera jamais. Ce code d&#x27;erreur est retourné dans l&#x27;entête (en erreur 400 ou 401), ainsi que dans le résultat tel que result[error][code].
     * @param {String} wwServiceId Votre service Id
     * @param {String} wwAccessToken Un access token valide
     * @param {module:api/ErrorsApi~listErrorsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    listErrors(wwServiceId, wwAccessToken, callback) {
      
      let postBody = null;
      // verify the required parameter 'wwServiceId' is set
      if (wwServiceId === undefined || wwServiceId === null) {
        throw new Error("Missing the required parameter 'wwServiceId' when calling listErrors");
      }
      // verify the required parameter 'wwAccessToken' is set
      if (wwAccessToken === undefined || wwAccessToken === null) {
        throw new Error("Missing the required parameter 'wwAccessToken' when calling listErrors");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        'ww-service-id': wwServiceId,'ww-access-token': wwAccessToken
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20020;

      return this.apiClient.callApi(
        '/listErrors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}