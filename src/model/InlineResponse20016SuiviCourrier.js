/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The InlineResponse20016SuiviCourrier model module.
 * @module model/InlineResponse20016SuiviCourrier
 * @version 1.2.7
 */
export class InlineResponse20016SuiviCourrier {
  /**
   * Constructs a new <code>InlineResponse20016SuiviCourrier</code>.
   * @alias module:model/InlineResponse20016SuiviCourrier
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse20016SuiviCourrier</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse20016SuiviCourrier} obj Optional instance to populate.
   * @return {module:model/InlineResponse20016SuiviCourrier} The populated <code>InlineResponse20016SuiviCourrier</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse20016SuiviCourrier();
      if (data.hasOwnProperty('dest'))
        obj.dest = ApiClient.convertToType(data['dest'], 'String');
      if (data.hasOwnProperty('refCourrier'))
        obj.refCourrier = ApiClient.convertToType(data['refCourrier'], 'String');
      if (data.hasOwnProperty('refTracking'))
        obj.refTracking = ApiClient.convertToType(data['refTracking'], 'String');
      if (data.hasOwnProperty('modeEnvoi'))
        obj.modeEnvoi = ApiClient.convertToType(data['modeEnvoi'], 'String');
      if (data.hasOwnProperty('lastState'))
        obj.lastState = ApiClient.convertToType(data['lastState'], 'String');
      if (data.hasOwnProperty('historique'))
        obj.historique = ApiClient.convertToType(data['historique'], 'String');
      if (data.hasOwnProperty('pnd'))
        obj.pnd = ApiClient.convertToType(data['pnd'], 'String');
      if (data.hasOwnProperty('are_base64_jpeg'))
        obj.areBase64Jpeg = ApiClient.convertToType(data['are_base64_jpeg'], 'String');
    }
    return obj;
  }
}

/**
 * Nom et/ou société du destinataire
 * @member {String} dest
 */
InlineResponse20016SuiviCourrier.prototype.dest = undefined;

/**
 * Référence Merci facteur du courrier
 * @member {String} refCourrier
 */
InlineResponse20016SuiviCourrier.prototype.refCourrier = undefined;

/**
 * Référence de suivi postal
 * @member {String} refTracking
 */
InlineResponse20016SuiviCourrier.prototype.refTracking = undefined;

/**
 * Mode d'envoi du courrier (lrar, lrare, suivi ou normal)
 * @member {String} modeEnvoi
 */
InlineResponse20016SuiviCourrier.prototype.modeEnvoi = undefined;

/**
 * Dernier état connu de l'acheminement
 * @member {String} lastState
 */
InlineResponse20016SuiviCourrier.prototype.lastState = undefined;

/**
 * Historique complet de l'acheminement
 * @member {String} historique
 */
InlineResponse20016SuiviCourrier.prototype.historique = undefined;

/**
 * 1 en cas de pli non distribuable, sinon 0. Est égale à null si le courrier n'a pas de suivi.
 * @member {String} pnd
 */
InlineResponse20016SuiviCourrier.prototype.pnd = undefined;

/**
 * Si vous avez envyé ce courrier en lrare, \"pending\" si l'accusé de réception n'est pas encore disponible, ou la base64 de l'AR numérisé (format jpeg) si il est disponible. Est égale à null le mode d'envoi du courrier n'est pas lrare.
 * @member {String} areBase64Jpeg
 */
InlineResponse20016SuiviCourrier.prototype.areBase64Jpeg = undefined;

