/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {SendCourrierAnonymize} from './SendCourrierAnonymize';

/**
 * The SendPublipostageBody model module.
 * @module model/SendPublipostageBody
 * @version 1.2.7
 */
export class SendPublipostageBody {
  /**
   * Constructs a new <code>SendPublipostageBody</code>.
   * @alias module:model/SendPublipostageBody
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SendPublipostageBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SendPublipostageBody} obj Optional instance to populate.
   * @return {module:model/SendPublipostageBody} The populated <code>SendPublipostageBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SendPublipostageBody();
      if (data.hasOwnProperty('idEnvoi'))
        obj.idEnvoi = ApiClient.convertToType(data['idEnvoi'], 'Number');
      if (data.hasOwnProperty('idExp'))
        obj.idExp = ApiClient.convertToType(data['idExp'], 'Number');
      if (data.hasOwnProperty('jsonExp'))
        obj.jsonExp = ApiClient.convertToType(data['jsonExp'], 'String');
      if (data.hasOwnProperty('modeEnvoi'))
        obj.modeEnvoi = ApiClient.convertToType(data['modeEnvoi'], 'String');
      if (data.hasOwnProperty('anonymize'))
        obj.anonymize = SendCourrierAnonymize.constructFromObject(data['anonymize']);
    }
    return obj;
  }
}

/**
 * Identifiant de l'envoi qui vous a été retourné par \\sourcePublipostage
 * @member {Number} idEnvoi
 */
SendPublipostageBody.prototype.idEnvoi = undefined;

/**
 * Id de l'adresse d'expéditeur (créée auparavant avec /setNewAdress) - si vous utilisez \"idExp\", laissez vide \"jsonExp\".
 * @member {Number} idExp
 */
SendPublipostageBody.prototype.idExp = undefined;

/**
 * json contenant l'adresse d'expéditeur (si vous ne souhaitez pas créer l'adresse auparavant avec /setNewAdress) - si vous utilisez \"jsonExp\", laissez vide \"idExp\".
 * @member {String} jsonExp
 */
SendPublipostageBody.prototype.jsonExp = undefined;

/**
 * Allowed values for the <code>modeEnvoi</code> property.
 * @enum {String}
 * @readonly
 */
SendPublipostageBody.ModeEnvoiEnum = {
  /**
   * value: "normal"
   * @const
   */
  normal: "normal",

  /**
   * value: "suivi"
   * @const
   */
  suivi: "suivi",

  /**
   * value: "lrar"
   * @const
   */
  lrar: "lrar",

  /**
   * value: "lrare"
   * @const
   */
  lrare: "lrare"
};
/**
 * Mode d'envoi du courrier : suivi, lrar, lrare, ou normal
 * @member {module:model/SendPublipostageBody.ModeEnvoiEnum} modeEnvoi
 */
SendPublipostageBody.prototype.modeEnvoi = undefined;

/**
 * @member {module:model/SendCourrierAnonymize} anonymize
 */
SendPublipostageBody.prototype.anonymize = undefined;

