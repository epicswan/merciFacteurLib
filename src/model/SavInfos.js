/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The SavInfos model module.
 * @module model/SavInfos
 * @version 1.2.7
 */
export class SavInfos {
  /**
   * Constructs a new <code>SavInfos</code>.
   * Les informations nécessaires à l&#x27;ouverture d&#x27;un ticket auprès du service après vente de Merci facteur
   * @alias module:model/SavInfos
   * @class
   * @param yourServiceName {String} Nom de votre service, tel qu'il est connu par la personne qui ouvre le ticket SAV (le SAV de Merci facteur se présentera comme traitant la demande pour vous).
   * @param email {String} Adresse email de la personne qui ouvre ce ticket SAV (les réponses du SAV seront envoyées sur cette adresse)
   * @param sujet {String} Sujet de la demande.
   * @param messageTexte {String} Texte de la demande.
   */
  constructor(yourServiceName, email, sujet, messageTexte) {
    this.yourServiceName = yourServiceName;
    this.email = email;
    this.sujet = sujet;
    this.messageTexte = messageTexte;
  }

  /**
   * Constructs a <code>SavInfos</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SavInfos} obj Optional instance to populate.
   * @return {module:model/SavInfos} The populated <code>SavInfos</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SavInfos();
      if (data.hasOwnProperty('yourServiceName'))
        obj.yourServiceName = ApiClient.convertToType(data['yourServiceName'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('referenceCourrier'))
        obj.referenceCourrier = ApiClient.convertToType(data['referenceCourrier'], 'String');
      if (data.hasOwnProperty('sujet'))
        obj.sujet = ApiClient.convertToType(data['sujet'], 'String');
      if (data.hasOwnProperty('messageTexte'))
        obj.messageTexte = ApiClient.convertToType(data['messageTexte'], 'String');
    }
    return obj;
  }
}

/**
 * Nom de votre service, tel qu'il est connu par la personne qui ouvre le ticket SAV (le SAV de Merci facteur se présentera comme traitant la demande pour vous).
 * @member {String} yourServiceName
 */
SavInfos.prototype.yourServiceName = undefined;

/**
 * Adresse email de la personne qui ouvre ce ticket SAV (les réponses du SAV seront envoyées sur cette adresse)
 * @member {String} email
 */
SavInfos.prototype.email = undefined;

/**
 * Si connue, la référence du courrier concerné par ce ticet SAV.
 * @member {String} referenceCourrier
 */
SavInfos.prototype.referenceCourrier = undefined;

/**
 * Sujet de la demande.
 * @member {String} sujet
 */
SavInfos.prototype.sujet = undefined;

/**
 * Texte de la demande.
 * @member {String} messageTexte
 */
SavInfos.prototype.messageTexte = undefined;

