/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The InlineResponse2006Adress model module.
 * @module model/InlineResponse2006Adress
 * @version 1.2.7
 */
export class InlineResponse2006Adress {
  /**
   * Constructs a new <code>InlineResponse2006Adress</code>.
   * @alias module:model/InlineResponse2006Adress
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse2006Adress</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2006Adress} obj Optional instance to populate.
   * @return {module:model/InlineResponse2006Adress} The populated <code>InlineResponse2006Adress</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2006Adress();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('civilite'))
        obj.civilite = ApiClient.convertToType(data['civilite'], 'String');
      if (data.hasOwnProperty('nom'))
        obj.nom = ApiClient.convertToType(data['nom'], 'String');
      if (data.hasOwnProperty('prenom'))
        obj.prenom = ApiClient.convertToType(data['prenom'], 'String');
      if (data.hasOwnProperty('societe'))
        obj.societe = ApiClient.convertToType(data['societe'], 'String');
      if (data.hasOwnProperty('adresse1'))
        obj.adresse1 = ApiClient.convertToType(data['adresse1'], 'String');
      if (data.hasOwnProperty('adresse2'))
        obj.adresse2 = ApiClient.convertToType(data['adresse2'], 'String');
      if (data.hasOwnProperty('adresse3'))
        obj.adresse3 = ApiClient.convertToType(data['adresse3'], 'String');
      if (data.hasOwnProperty('cp'))
        obj.cp = ApiClient.convertToType(data['cp'], 'String');
      if (data.hasOwnProperty('ville'))
        obj.ville = ApiClient.convertToType(data['ville'], 'String');
      if (data.hasOwnProperty('pays'))
        obj.pays = ApiClient.convertToType(data['pays'], 'String');
    }
    return obj;
  }
}

/**
 * Id de l'adresse
 * @member {Number} id
 */
InlineResponse2006Adress.prototype.id = undefined;

/**
 * Civilité du contact
 * @member {String} civilite
 */
InlineResponse2006Adress.prototype.civilite = undefined;

/**
 * Nom du contact
 * @member {String} nom
 */
InlineResponse2006Adress.prototype.nom = undefined;

/**
 * Prénom du contact
 * @member {String} prenom
 */
InlineResponse2006Adress.prototype.prenom = undefined;

/**
 * Société du contact
 * @member {String} societe
 */
InlineResponse2006Adress.prototype.societe = undefined;

/**
 * Adresse ligne 1 du contact
 * @member {String} adresse1
 */
InlineResponse2006Adress.prototype.adresse1 = undefined;

/**
 * Adresse ligne 2 du contact
 * @member {String} adresse2
 */
InlineResponse2006Adress.prototype.adresse2 = undefined;

/**
 * Adresse ligne 3 du contact
 * @member {String} adresse3
 */
InlineResponse2006Adress.prototype.adresse3 = undefined;

/**
 * Code postal du contact
 * @member {String} cp
 */
InlineResponse2006Adress.prototype.cp = undefined;

/**
 * Ville du contact
 * @member {String} ville
 */
InlineResponse2006Adress.prototype.ville = undefined;

/**
 * Pays du contact
 * @member {String} pays
 */
InlineResponse2006Adress.prototype.pays = undefined;

